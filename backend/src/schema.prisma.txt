generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  role      String   @default("agent")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Client {
  id               String    @id @default(cuid())
  firstName        String    @map("first_name")
  lastName         String    @map("last_name")
  email            String?   @unique
  phone            String?
  role             String    @default("BUYER")
  stage            String    @default("NEW")
  birthday         DateTime? @db.Date
  city             String?
  state            String?
  lastContactAt    DateTime? @map("last_contact_at")
  nextFollowUpAt   DateTime? @map("next_follow_up_at")
  tags             String[]  @default([])
  notes            String?
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  transactions Transaction[]

  @@map("clients")
}

model Transaction {
  id                String    @id @default(cuid())
  clientId          String    @map("client_id")
  type              String    @default("BUY")
  propertyAddress   String    @map("property_address")
  city              String?
  state             String?
  status            String    @default("ACTIVE")
  closeDate         DateTime? @map("close_date") @db.Date
  price             Decimal?  @db.Decimal(12, 2)
  commissionRatePct Decimal   @map("commission_rate_pct") @db.Decimal(5, 2) @default(3.0)
  mySplitPct        Decimal   @map("my_split_pct") @db.Decimal(5, 2) @default(80.0)
  grossCommission   Decimal?  @map("gross_commission") @db.Decimal(12, 2)
  netCommissionToMe Decimal?  @map("net_commission_to_me") @db.Decimal(12, 2)
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @updatedAt @map("updated_at")

  client Client @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@map("transactions")
}